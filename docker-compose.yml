version: '3.1'

services:
  zoo1:
    container_name: zookeeper-leader
    image: zookeeper
    restart: always
    hostname: zookeeper-leader
    ports:
      - 2181:2181
    environment:
      TZ: "Asia/Seoul"
      # ZOO_MY_ID: 1
      # ZOO_TICK_TIME:2000
      # ZOO_INIT_LIMIT: 5
      # ZOO_SYNC_LIMIT: 2 
      # ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  kafka1 :
    container_name: kafka-leader
    image: wurstmeister/kafka:2.12-2.3.0
    hostname: kafka-leader
    restart: always
    depends_on:
      - zoo1
      # - zoo2
      # - zoo3
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "test_topic:1:1" # Topic명:Partition개수:Replica개수
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-leader:2181
      KAFKA_HEAP_OPTS: "-Xmx500M -Xms500M"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://52.78.62.228:9092
      TZ: "Asia/Seoul"

  # zoo2:
  #   container_name: zookeeper-follower1
  #   image: zookeeper
  #   restart: always
  #   hostname: zoo2
  #   ports:
  #     - 2182:2181
  #   environment:
  #     ZOO_MY_ID: 2
  #     ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181

  # zoo3:
  #   container_name: zookeeper-follower2
  #   image: zookeeper
  #   restart: always
  #   hostname: zoo3
  #   ports:
  #     - 2183:2181
  #   environment:
  #     ZOO_MY_ID: 3
  #     ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181